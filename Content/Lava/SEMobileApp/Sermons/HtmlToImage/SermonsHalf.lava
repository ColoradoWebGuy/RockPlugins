{%- contentchannelitem where:'Guid == "{{Guid}}"' -%}
    {%- assign item = contentchannelitemItems | First - %}
    {%- assign nowDateTime = 'Now' | Date:'yyyyMMddHHmmss' -%}
    {%- assign sermonsCount = 0 -%}
	{%- assign itemChildItems = item.ChildItems | Sort:'Order' -%}
	{%- assign firstSermon = "" -%}
	{%- assign lastSermon = "" -%}
	{%- for messages in itemChildItems -%}
		{%- assign message = messages.ChildContentChannelItem -%}
		{%- assign startDateTime = message.StartDateTime | Date:'yyyyMMddHHmmss' -%}
		{%- assign endDateTime = message.ExpireDateTime | Date:'yyyyMMddHHmmss' | Default:'99999999999999' -%}
		{%- if startDateTime <= nowDateTime and nowDateTime <= endDateTime -%}
			{%- if message.ContentChannelId == "23" -%}
				{%- if lastSermon == "" -%}
					{%- assign lastSermon = message -%}
				{%- endif -%}
				{%- assign firstSermon = message -%}
				{%- assign sermonsCount = sermonsCount | Plus:1 -%}
			{%- endif -%}
		{%- endif -%}
	{%- endfor -%}
{%- endcontentchannelitem -%}
<html>
    <head>
        <link rel="stylesheet" href="https://www.southeastchristian.org/Themes/SECC2019/Styles/layout.css?v=637171650738055685"/>
        <link rel="stylesheet" href="https://www.southeastchristian.org/Themes/SECC2019/Styles/main.css?v=637171650775243506"/>
        <style>
            html, body {
              margin: 0px;
              padding: 0px;
              background-color: #fff;
            }
            .box {
              margin: 0px 120px 60px;
              width: 1256px;
              height:822px;
              background-color: #E7E7E7;
              border-radius: 0px 0px 80px 80px;
              background-repeat: no-repeat;
              background-size: contain;
              background-position: top;
            }
            .box h4, .box h5, .box p {
              color: white;
            }
            .content {
              padding: 5em;
              height: 100%;
              overflow: hidden;
            }
            .truncate-info, .truncate-info-long {
                font-size: 3em;
            }
        </style>
    </head>
    {%- assign bodyCharactersLimit = 200 -%}
    {%- assign titleLimitBeforeSubractingBody = 20 -%}
    {%- assign titleLength = item.Title | Size -%}
    {%- if titleLength > titleLimitBeforeSubractingBody -%}
        {%- assign titleLength = titleLength | Modulo:titleLimitBeforeSubractingBody | Times:4 }} -%}
        {%- assign bodyCharactersLimit = bodyCharactersLimit | Minus:titleLength -%}
    {%- endif -%}
    <body>
        <div class="box">
            <div class="content">
                <h1 class="g-font-weight--600 g-color--dark g-line-height" style="font-size: 4.5em;">{{item.Title | StripHtml | Upcase }}</h1>
                {% if sermonsCount > 1 -%}
                <h3 class="g-color--dark g-line-height" style="font-size: 5rem">{{ firstSermon.StartDateTime | Date:'MMM dd, yyyy' }} - {{ lastSermon.StartDateTime | Date:'MMM dd, yyyy' }}<br />
                SERMONS: {{ sermonsCount }}</h3>
                <br />
                <h3 class="truncate-info g-color--dark g-padding-t-20--xs g-line-height">
                    {%- if titleLength > titleLimitBeforeSubractingBody -%}
                    {{item.Content | StripHtml | Truncate:bodyCharactersLimit,' ...' }}
                    {%- else -%}
                    {{item.Content | StripHtml }}
                    {%- endif -%}
                </h3>
                {% else %}
                <h3 class="g-color--dark g-line-height" style="font-size: 5rem;">{{ firstSermon.StartDateTime | Date:'MMM dd, yyyy' }}</h3>
                <br />
                <h3 class="truncate-info-long g-color--dark g-padding-t-20--xs g-line-height">
                    {%- if titleLength > titleLimitBeforeSubractingBody -%}
                    {{item.Content | StripHtml | Truncate:bodyCharactersLimit,' ...' }}
                    {%- else -%}
                    {{item.Content | StripHtml }}
                    {%- endif -%}
                </h3>
                {% endif %}
            </div>
        </div>
        <script>
            /**
          shave - Shave is a javascript plugin that truncates multi-line text within a html element based on set max height
          @version v2.5.6
          @link https://github.com/dollarshaveclub/shave#readme
          @author Jeff Wainwright <yowainwright@gmail.com> (jeffry.in)
          @license MIT
        **/
        (function (global, factory) {
          typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
          typeof define === 'function' && define.amd ? define(factory) :
          (global = global || self, global.shave = factory());
        }(this, function () { 'use strict';

          function shave(target, maxHeight) {
            var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            if (typeof maxHeight === 'undefined' || isNaN(maxHeight)) throw Error('maxHeight is required');
            var els = typeof target === 'string' ? document.querySelectorAll(target) : target;
            if (!els) return;
            var character = opts.character || 'â€¦';
            var classname = opts.classname || 'js-shave';
            var spaces = typeof opts.spaces === 'boolean' ? opts.spaces : true;
            var charHtml = "<span class=\"js-shave-char\">".concat(character, "</span>");
            if (!('length' in els)) els = [els];

            for (var i = 0; i < els.length; i += 1) {
              var el = els[i];
              var styles = el.style;
              var span = el.querySelector(".".concat(classname));
              var textProp = el.textContent === undefined ? 'innerText' : 'textContent'; // If element text has already been shaved

              if (span) {
                // Remove the ellipsis to recapture the original text
                el.removeChild(el.querySelector('.js-shave-char'));
                el[textProp] = el[textProp]; // eslint-disable-line
                // nuke span, recombine text
              }

              var fullText = el[textProp];
              var words = spaces ? fullText.split(' ') : fullText; // If 0 or 1 words, we're done

              if (words.length < 2) continue; // Temporarily remove any CSS height for text height calculation

              var heightStyle = styles.height;
              styles.height = 'auto';
              var maxHeightStyle = styles.maxHeight;
              styles.maxHeight = 'none'; // If already short enough, we're done

              if (el.offsetHeight <= maxHeight) {
                styles.height = heightStyle;
                styles.maxHeight = maxHeightStyle;
                continue;
              } // Binary search for number of words which can fit in allotted height


              var max = words.length - 1;
              var min = 0;
              var pivot = void 0;

              while (min < max) {
                pivot = min + max + 1 >> 1; // eslint-disable-line no-bitwise

                el[textProp] = spaces ? words.slice(0, pivot).join(' ') : words.slice(0, pivot);
                el.insertAdjacentHTML('beforeend', charHtml);
                if (el.offsetHeight > maxHeight) max = pivot - 1;else min = pivot;
              }

              el[textProp] = spaces ? words.slice(0, max).join(' ') : words.slice(0, max);
              el.insertAdjacentHTML('beforeend', charHtml);
              var diff = spaces ? " ".concat(words.slice(max).join(' ')) : words.slice(max);
              var shavedText = document.createTextNode(diff);
              var elWithShavedText = document.createElement('span');
              elWithShavedText.classList.add(classname);
              elWithShavedText.style.display = 'none';
              elWithShavedText.appendChild(shavedText);
              el.insertAdjacentElement('beforeend', elWithShavedText);
              styles.height = heightStyle;
              styles.maxHeight = maxHeightStyle;
            }
          }

          return shave;

        }));
        shave('.truncate-info', 375, {character: ' ...'});
        shave('.truncate-info-long', 425, {character: ' ...'});
        </script>

    </body>
</html>
